# System call numbers are here:
# https://w3challs.com/syscalls/?arch=arm_thumb

const FCB_BUFFER_SIZE := 512;
typedef FCBIndexType is uint16;

record RawFCB is
	fd: uint32;
end record;

include "fileio.coh";

@impl sub FCBRawRead is
	var fd := fcb.fd;
	var dma := &fcb.buffer[0];
	var i: int32;

	@asm "push {r7}";
	@asm "ldr r0, =", fd;
	@asm "ldr r0, [r0]";
	@asm "ldr r1, =", dma;
	@asm "ldr r1, [r1]";
	@asm "ldr r2, =", len;
	@asm "ldrh r2, [r2]";
	@asm "ldr r4, =", pos;
	@asm "ldr r4, [r4]";
	@asm "mov r5, #0";
	@asm "mov r7, #0xb4"; # READ64
	@asm "swi 0";
	@asm "ldr r1, =", i;
	@asm "str r0, [r1]";
	@asm "pop {r7}";

	if i < 0 then
		amount := 0;
		fcb.flags := fcb.flags | FCB_FLAG_ERROR;
	else
		amount := i as FCBIndexType;
	end if;
end sub;

@impl sub FCBRawWrite is
	var fd := fcb.fd;
	var dma := &fcb.buffer[0];
	var i: int32;

	@asm "push {r7}";
	@asm "ldr r0, =", fd;
	@asm "ldr r0, [r0]";
	@asm "ldr r1, =", dma;
	@asm "ldr r1, [r1]";
	@asm "ldr r2, =", len;
	@asm "ldrh r2, [r2]";
	@asm "ldr r4, =", pos;
	@asm "ldr r4, [r4]";
	@asm "mov r5, #0";
	@asm "mov r7, #0xb5"; # WRITE64
	@asm "swi 0";
	@asm "ldr r1, =", i;
	@asm "str r0, [r1]";
	@asm "pop {r7}";

	if i < 0 then
		fcb.flags := fcb.flags | FCB_FLAG_ERROR;
	end if;
end sub;

sub fcb_i_open(fcb: [FCB], filename: [uint8], flags: uint32): (errno: uint8) is
	_fcb_init(fcb);

	var fd: int32;
	@asm "push {r7}";
	@asm "ldr r0, =", filename;
	@asm "ldr r0, [r0]";
	@asm "ldr r1, =", flags;
	@asm "ldr r1, [r1]";
	@asm "mov r2, #", 0o666; # umask
	@asm "mov r7, #5"; # OPEN
	@asm "swi 0";
	@asm "ldr r1, =", fd;
	@asm "str r0, [r1]";
	@asm "pop {r7}";

	fcb.fd := fd as uint32;
	if fd < 0 then
		errno := (-fd) as uint8;
	else
		errno := 0;
	end if;
end sub;

sub FCBOpenIn(fcb: [FCB], filename: [uint8]): (errno: uint8) is
	(errno) := fcb_i_open(fcb, filename, 0o0000); # O_RDONLY
end sub;

sub FCBOpenUp(fcb: [FCB], filename: [uint8]): (errno: uint8) is
	(errno) := fcb_i_open(fcb, filename, 0o0002); # O_RDWR
end sub;

sub FCBOpenOut(fcb: [FCB], filename: [uint8]): (errno: uint8) is
	(errno) := fcb_i_open(fcb, filename, 0o1102); # O_RDWR|O_CREAT|O_TRUNC
end sub;
	
sub FCBClose(fcb: [FCB]): (errno: uint8) is
	FCBFlush(fcb);

	var fd := fcb.fd;
	@asm "push {r7}";
	@asm "ldr r0, =", fd;
	@asm "ldrb r0, [r0]";
	@asm "mov r7, #6"; # CLOSE
	@asm "swi 0";
	@asm "neg r0, r0";
	@asm "ldr r1, =", errno;
	@asm "strb r0, [r1]";
	@asm "pop {r7}";
end sub;

sub FCBExt(fcb: [FCB]): (len: uint32) is
	FCBFlush(fcb);

	var fd := fcb.fd;
	@asm "push {r7}";
	@asm "ldr r0, =", fd;
	@asm "ldrb r0, [r0]";
	@asm "mov r1, #0"; # offset
	@asm "mov r2, #2"; # SEEK_END
	@asm "mov r7, #19"; # LSEEK
	@asm "swi 0";
	@asm "ldr r1, =", len;
	@asm "str r0, [r1]";
	@asm "pop {r7}";
end sub;

include "common-file.coh";


