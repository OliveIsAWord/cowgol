var LOMEM: [uint8];
@asm "mov word [", LOMEM, "], LOMEM";

var HIMEM: [uint8];
@asm "mov word [", HIMEM, "], 0";

sub Exit() is
	@asm "mov ax, 0x4c00";
	@asm "int 0x21";
end sub;

sub ExitWithError() is
	@asm "mov ax, 0x4c01";
	@asm "int 0x21";
end sub;

sub AlignUp(in: intptr): (out: intptr) is
	out := in;
end sub;

sub print_char(c: uint8) is
    if c == 10 then
        @asm "mov dl, 13";
        @asm "mov ah, 2";
        @asm "int 0x21";
    end if;
	@asm "mov dl, [", c, "]";
	@asm "mov ah, 2";
	@asm "int 0x21";
end sub;

sub MemSet(buf: [uint8], byte: uint8, len: uint16) is
	var bufend := buf + len;
	loop
		if buf == bufend then
			return;
		end if;
		[buf] := byte;
		buf := buf + 1;
	end loop;
end sub;

include "common.coh";

